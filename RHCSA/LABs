Lesson 1: Installing Red Hat Enterprise Linux
Instal RHEL:
1. a graphical user interface should be installed
2. 10 GiB Root partition
3. 1 GiB Swap partition
4. 4 GiB of disk space remains as unused
5. set the root password "password"
6. create a user "student" with the password "password"
7. configure the network interface to contact a DHCP server

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 2: Using Essential Tools 
1. locate the man page that shows how to set a password
2. use the man page for useradd
3. as root create a user "Anna"
4. set the password for user Anna to "password"
5. use cd /etc to make /etc your current directory
6. use globbing and the ls command to show all files in /etc that have a number in their number
7. still from /etc, use the command ls -l and use a pipe to display the results page by page 
8. type cd without any arguments
9. use vim to create a file with the name users and make sure that it contains the names: alex, alexander, linda, belinda on separate lines

Solution:
1. man -k password -> man -k password | grep 1 
2. man useradd -> Shift+G -> SEE ALSO -> passwd(1) -> q -> man passwd
3. useradd anna
4. passwd anna -> 2x"password"
5. cd /etc
6. ls *[0-9]* -> ls -d *[0-9]* //without the content of the directories
7. ls -l | less
8. cd // it takes to home /root directory
9. vim users -> Alex 
                Alexander 
                Linda 
                Belinda -> ESC -> :wq!

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 3: Essential File Management Tools
1. create a directory structure /tmp/files/pictures, /tmp/files/photos, /tmp/files/videos
2. copy all files that have a name starting with an a, b or c from /etc to /tmp/files
3. from /tmp/files you move all files that have a name starting with an 'a' or 'b' to /tmp/files/photos and with a 'c' to /tmp/files/videos
4. find all files in /etc that have a size smaller than 1000 bytes
5. copy these to /tmp/files/pictures
6. in /tmp/files create a symbolic link to var
7. create a compressed archive file with relative file names into /tmp/archive

Solution:
1. mkdir -p /tmp/files/pictures /tmp/files/photos /tmp/files/videos
2. cp /etc/[a-c]* /tmp/files 
3. cd /tmp/files/ -> mv [ab]* photos/ -> mv c* videos/
4.-5. find /etc -size -1000c -exec cp {} pictures \;
6. ln -s /var .
7. tar cJvf home.tar.xz /home -> mkdir /tmp/archive; tar xvf home.tar.xz -C /tmp/archive // ";" allows to type commands one by one 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 4: Working with Text Files
1. use head and tail to display the 5th line of the the file /etc/passwd
2. use sed to do exactly the same
3. use awk in a pipe to filter the last column out of the results of the command ps aux
4. use grep to show the names of all files in /etc that have lines that contain the text root as a word
5. use grep to show all lines from all files in /etc that contain exactly 3 characters
6. use grep to find all files that contain the string alex, but make sure that alexander is not included in the result
7. create a simple file where one line has the text alex and another line has the text alexander

Solution:
1. head -n 5 /etc/passwd | tail -n 1
2. sed -n 5p /etc/passwd
3. ps aux | awk '{ print $NF }'
4. cd /etc -> grep '\<root\>' *
5. cd /etc -> grep '^...$' *
6. grep '^alex$' * // also: grep '\<alex\>' *
7. vim users -> Alex
                Alexander -> ESC -> :wq!
                
--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 5: Connecting to a RHEL Server
1. open a login prompt on tty6, starting from the graphical console
2. log in as an ordinary user and use the appropriate command to get back to the graphical console
3. use ssh to make a connection as user root to "localhost"

//At the login screen, press Ctrl + Alt + F5 to switch to a TTY
1. Ctrl+Alt+F6 to go to tty6 
2. login; password -> w -> chvt 1 -> login; password or:
3. ssh root@localhost; password

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 6: Managing User and Groups
1. make sure that new users require a password with a minimal length of 6 characters and a maximal validity of 90 days
2. ensure, while creating users, an empty file with the name NewFile is created in their home directory create users Anna, Audrey, Linda and Lisa
3. set the password for Anna and Audrey to "password" 
4. disable the password for Linda and Lisa 
5. create the groups profs and students
6. make users Anna and Audrey members of profs and Linda and Lisa members od students
- you may do that as a secondary group assignment

Solution:
1. vim /etc/login.defs -> PASS_MAX_DAYS 90 -> PASS_MIN_LEN 6 -> :wq! 
2. cd /etc/skel -> touch NewFile -> useradd Anna -> useradd Audrey -> useradd Linda  -> useradd Lisa 
3. passwd Anna -> 2x"password" -> also: echo password | passwd --stdin audrey
4. passwd -l linda; passwd -l lisa
5. groupadd students; groupadd profs 
6. usermod -aG students lisa; usermod -aG students linda; usermod -aG profs anna; usermod -aG profs audrey //to check f.e.: id anna 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 7: Managing Permissions 
1. ensure that others is denied default permissions to any file user Linda creates 
2. create a shared group directory structure with /data/profs and data/students
3. make sure it meets the following conditions:
- members of the group have full read and write access to their directories 
- others should have no permissions at all
- files created in these directories are writeable for all members of the group
- users can only delete files they have created themselves
- members of the group profs have read access to everything /data/students
- user Anna is the headmaster and should be able to delete everything in /data/students and /data/profs

Solution:
1. cd /home/linda/ -> vim .bash_profile -> umask 007 //to test: su - linda -> touch linda5 -> ls -l linda5
2. cd /data -> mkdir profs students  
3. chmod 3770 students/; chmod 3770 profs/ -> ls -l -> chown anna:students students/; chown anna:profs profs/
cd students/ -> setfacl -m d:g:profs:rx /data/students -> getfacl .

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 8: Configuring Networking 
1. set the server to a fixed IP address that matches your current network configuration
2. set a second IP address 10.0.0.10/24 on the same network interface
3. reboot
4. verify your network is still working with the new settings

Solution:
1. ip a -> search "dynamic" -> inet f.e. 192.168.4.200/24 -> ping 192.168.4.10 -> ^C -> nmtui
NetworkManager TUI: Edit a connection -> Add -> Edit -> IPv4 from "Automatic" to "Manual" -> Show -> Addresses: 192.168.4.10/24 -> 
2. Add -> 10.0.0.10/24 -> Gateway: 192.168.4.2 -> DNS servers:8.8.8.8 -> OK -> Back -> Activate a connection -> Activate -> Back -> Quit 
3. reboot
4. ip a -> ^C

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 9: Managing Process
1. type the command dd if is /dev/zero and of is /dev/null
2. change it from a foreground to a background job
3. run this commmand three more times, but strat it as a background job immediately 
4. use the jobs command to get information about the current background jobs
5. from top, change the niceness to one of the dd processes to -5 and observe what's happening
6. again from top, send a sigkill signal to top and observe what happens 
7. from the commmand line, terminate all of the remaining dd processes

Solution:
1. dd if=/dev/zero of=/dev/null - this process takes to much time, there are better solutions -> Ctrl+Z 
2. bg - to restart a stopped (by^Z) bacground process
3. jobs -> dd if=/dev/zero of=/dev/null -> dd if=/dev/zero of=/dev/null -> dd if=/dev/zero of=/dev/null
4. jobs
5. top -> r -> PID -> -5
6. top -> k -> PID -> 15
7. killall dd

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 10: Managing Software
1. ensure your system is using a YUM repository for base packages, as well as application streams
2. find the package that contains the sepolicy program file and install it
3. install the previous version of PHP
4. download the httpd package from the repositories without installing it 
5. query to see if there are any scripts in it

Solution:
1. cd /etc/yum.repos.d/ -> ls -> cat base.repo -> cat appstream -> tail -n 1 /etc/fstab //during exam you can't connect with RH repositories
-> less redhat.repo 
2. yum search sepolicy -> if "no matches found", deeper searching -> yum provides */sepolicy 
3. yum module list -> search php -> yum module install php:7.1
4. cd -> yumdownloader httpd
5. ls -> rpm -qp --scripts httpd-2.4.35-6.el8+2089+57a79027.x86_64.rpm

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 11: Working with Systemd
1. make sure that the httpd service is automatically started 
2. edit its configuration such that on failure, it will continue after one minute 

Soultion:
1. status httpd
2. systemctl edit httpd -> RestartSec=60s -> Ctrl+X -> y -> Enter -> systemctl deamon-reload -> systemctl enable --now httpd 
to check -> systemctl status httpd -> killall httpd -> systemctl status httpd -> Active: activating (auto-restart) -> after 60 it will be working again

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 12: Using at
1. ensure that the systemd timer that cleans up tmp files is enabled
2. run a cron job that will issue the command touch /tmp/cronfile five minutes from now
3. use at to schedule a job to poweroff your system at a convenient time later today

Solution:
1. cd /usr/lib/systemd/system -> ls *timer -> ls systemd-tmpfiles-clean. * -> vim systemd-tmpfiles-clean.service -> [Service] 
  -> vim systemd-tmpfiles-clean.timer -> [Timer] -> systemd enable --now systemd-tmpfiles-clean.timer 
  -> systemctl status systemd-tmpfiles-clean.timer -> should be: Active: active (waiting)
2. crontab -e -> 38 * * * * touch /tmp/cronfile -> ls -l /tmp/cronfile after 5 minutes
3. at 6 pm -> poweroff -> Ctrl+D 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 13: Configuring Logging
1. make sure that the systemd journal is logged persistently
2. create an entry in rsyslog that writes all messages with a severity of error or higher to /var/log/error
3. ensure that /var/log/error is rotated on a monthly basis and the last 12 logs are kept before they are rotated out

Solution:
1. mkdir /var/log/journal -> if exists, can't be create a new one
2. vim rsyslog.conf -> "# Save boot messages also to boot.leg" -> *.error /var/log/error -> :wq! 
  -> to ensure: systemctl restart rsyslog 
3. cd /etc/logrotate.d/ -> as example: cat vsftpd -> for information: vim /etc/logrotate.conf -> 
vim error -> /var/log/error{
                            monthly 
                            rotate 12
                            create 
             } -> :wq!
             
--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 14: Managing Storage
Create a 20 GiB additional hard disk on your virtual machine and this disk needs to be completely avaliable:
1. on this disk, create a primary partition with a size of 1 GiB
2. format it with Ext4 and mount it persistently on /mounts/files using its UUID 
3. create an extended partition that includes all remaining disk space
4. in this partition, create a 500 MiB (mebibyte) XFS partition and mount it persistently on /mounts/xfs using the label myxfs
5. create a 500 MiB Swap partition and mount it persistently as well

Solution:

fdisk /dev/nvme0n4 -> Command: n -> Partition type: p -> Enter -> Last sector ... :+1G -> // creates nvme0n4p1
Command: n -> Partition type: e -> 
Command: n -> Last sector ...: +500M -> //nvme0n4p5
Command: n -> Last sector ...: +500M -> //nvme0n4p6
Command: t -> Partition number ...: 6 -> Hex code:82 // what means: partition 'Linux' to 'Linux swap/ Solaris' -> 
Command: w // what means "The partition table has been altered." 
lsblk

//m is like a menu for fdisk, L - list of partition types w Hex code

mkdir -p /mounts/files -> mkfs.ext4 /dev/nvme0n4p1 -> blkid -> copy by mouse UUID -> vim /etc/fstab -> 
paste UUID + "/mounts/files ext4 defaults 0 0"

mkfs.xfs /dev/nvme0n4p5 -> mkdir /mounts/xfs -> vim /etc/stab -> "/dev/nvme0n4p5  /mount/xfs  xfs  defaults  0 0"
mkswap /dev/nvme0n4p6 -> vim /etc/stab -> "/dev/nvme0n4p6  swap  swap  defaults  0 0"

swapon -a -> mount -a 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 15: Managing Advanced Storage 
You need a new 10 GiB disk to your virtual machine:
1. create an LVM logical volume with the name lvdb and a size of 1GiB
2. create the VG and PV that are required for this LV
3. format the LV with the XFS file system and mount it persistently on mounts lvdb
4. use the appropriate solution to create a 10 TiB thin provisioned volume 
5. create a 1 GiB LUKS encrypted volume with the name secret
6. make sure it is mounted persistently, but not automatically, on /mount/secret/ 

Solution:


--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 16: Managing the Kernel
1. install a new version of the kernel
2. enable packet forwarding

Solution:


--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 17:
1. configure your system to boot in multi-user target by default
2. persistently remove the options that hide startup messages while booting

Solution: 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 18:
Assume that you have lost the root user password: 
1. fix it and reset the password

If you want to consult the procedure again, watch lesson 18.2

Solution: 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 19:
Write a script:
1. the script should evaluate the argument that was provided while running the script
- if the argument is yes, the script should run the command echo "that's nice"
- if the argument is no, the script should run the command echo "I'm sorry to hear that"
- and if the argument is anything else, the script should run the command "unknown argument provided"
2. make sure that if no argument was provided, the script will show an error message explaining what the user was supposed to do 

Solution: 

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 20:
1. configure SSH keys for passwordless login to the SSH process that's listening on localhost 
2. configure SSH such that users linda and root are the only users that are allowed to log in

Solution:

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 21: Managing HTTP Services
Configure Apache: 
1. to serve a basic website that shows the text "Hello World" after connecting to it

Solution:

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 22:
1. make sure that SELinux is enabled and enforcing
2. fix it: you suspect that some files in the /etc directory are configured to the context label that doesn't match the context label 
   that is set in the SELinux policy  

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 23: 
Configure the Firewall such that:
1. remote access to SSH as well as the Apache process are allowed.

Solution:
1. type fire-cmd --list-all and see allowed SSH 
2. find name of the server: firewell-cmd --add-services and search http and https

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 24:

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 25:

--------------------------------------------------------------------------------------------------------------------------------------------

Lesson 26:
--------------------------------------------------------------------------------------------------------------------------------------------
Lesson 27:



