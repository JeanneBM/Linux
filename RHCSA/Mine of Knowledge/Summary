1.1 Understaning Server Requirements 


Understanding RHEL Installation

Red Hat Enterprise Linux can be installed or deployed in different ways:

	* On physical hardware
	* In virtual machines
	* As a container
	* As an instance in cloud

In this class, we're installing ina virtual machine

	* Use RHEL 8 (downloaded from redhat.com)
	* Alternatively, use CentOS 8 (download from centos.org)


Understanding Server Requirements

Requirements depend on the type of installation:

	* Physical, cloud or virtual?
	* With or without GUI? #z czy bez interfejsu?
	* What are you going to do with the server

For installation of a virtual machine in this class:

	* 2 GiB of RAM
	* 20 GiB of disk space
	* Wired Network Connection
	* Optical drive or access to DVD ISO

-----------------------------------------------------------------------------------------------------------------------------------------------

1.2 Performing a Basic Installation


1. Install Red Hat Enterprise Linux 8.0

2. Reload

3. Welcome to Red Hat Enterprise Linux 8.0 >> language and keyboard >> "Continue"

4. INSTALLATION SUMMARY:
	
	- LOCALIZATION
		* Keyboard
		* Language Support
		* Time & Date
	- SOFTWARE
		* Installation Source
		* Software Selection >> Workstation >> "Done"
	- SYSTEM
		* Installation Destination >> Jak pojawia sie komunikat na czerwono, bo zajmiemy caly dysk Red Hatem wystarczy otworzyc opcje 							i potwierdzic "Done"
		* KDUMP
		* Network & Host >> Zmienic "OFF" na "ON" >> "Done"
		* SECURITY POLICY
		* System Purpose


	>> "Begin Installation"

5. USER SETTINGS:

	- Root Password
	- User Creation

6. Reboot

7. License Information >> License Agreement >> Agree >> Done

8. Finish Configuration (prawy dolny rog)

-----------------------------------------------------------------------------------------------------------------------------------------------

1.3 Installing with Custom Partitioning


1. Install Red Hat Enterprise Linux 8.0

2. Reload

3. Welcome to Red Hat Enterprise Linux 8.0 >> language and keyboard >> "Continue"

4. INSTALLATION SUMMARY:
	
	- LOCALIZATION
		* Keyboard
		* Language Support
		* Time & Date
	- SOFTWARE
		* Installation Source
		* Software Selection >> Workstation >> "Done"

#ROZNICA#
-----------------------------------------------------------------------------------------------------------------------

	- SYSTEM
		* Installation Destination >> Storage Configuration >> Custom >> "Done" 
						>> "+" >> Mount Point:/ >> Desired Capacity: 18G >> Add mount point
						>> Device Type: Standard Partition 
						>> "+" >> Mount Point: swap >> Desired Capacity: 2G >> Add mount point
						>> Device Type: Standard Partition

						>> "Done" >> "Accept Changes"

-----------------------------------------------------------------------------------------------------------------------


		* KDUMP
		* Network & Host >> Zmienic "OFF" na "ON" >> "Done"
		* SECURITY POLICY
		* System Purpose


	>> "Begin Installation"

5. USER SETTINGS:

	- Root Password
	- User Creation

6. Reboot

7. License Information >> License Agreement >> Agree >> Done

8. Finish Configuration (prawy dolny rog)

-----------------------------------------------------------------------------------------------------------------------------------------------

1.4 Logging into the Server


* For security, don't log in as root by default

* Use su - to open a root shell when required 

* Or use sudo to run tasks as root (covered in Lesson 5)

CTRL + "+" - zmiana wielkosci czcionki w Terminalu 

dolar - zwykly uzytkownik

/home/student

pwd

"su - " zmiani na roota #
/root


"exit" - powrot na zwyklego uzytkownika

-----------------------------------------------------------------------------------------------------------------------------------------------

2.1 Getting Started with Linux Commands

Getting Started on the CLI: 
* Using the CLI is essential for a Linux Administrator:
	* pwd: shows which directory am I in
	* whoami: shows current user name
	* ls: lists files in the current directory
	* ip addr show: shows your current IP configuration
	* free -m: shows how much memory you have
	* df -h: shows avaliable disk space
	* cat /etc/hosts: shows the contents of a file 
	* findmnt: shows mounted file systems


pwd
whoami
ls
ls -l
ip addr show 
free
free -m
df
df -h
cat /etc/hosts
findmnt

-----------------------------------------------------------------------------------------------------------------------------------------------

2.2 Working with the Bash Shell

Understanding the Shell:
* Bash is the dafault shell and provides several useful features:
	* Tab command completion
	* history
	* piping
	* redirection
	* environment variables
	* aliases
	* scripts


history
!11
!f
^R (reverse-i-search - string of commands)
ps aux
ps aux | less
ps aux | wc
whoami >> lsfiles
!ca
env
env | less
LANG=fr_FR.utf-8
LANG=en_EN.utf-8

-----------------------------------------------------------------------------------------------------------------------------------------------

2.3 Understanding I/O Redirection and Piping


		STDIN	       STDOUT
	User ----------> CMD ---------> computer monitor
	
		file <		> filename	     ^ STDERR 2> errfile

-----------------------------------------------------------------------------------------------------------------------------------------------

2.4 Using I/O Redirection and Piping

Using Redirection and Piping:
* Redirection uses STDIN, STDERR and STDOUT to work with command input and output in a flexible way:
	* >
	* >>
	* 2>/dev/null
	* <

* In piping, the STDOUT of the first command is used as STDIN of the second command


ls /etc
ls /etc > etcfiles
less etcfiles
who 
who > etcfiles
ls >> etcfiles
grep -R student /etc
grep -R student /etc 2>/dev/null
ls -l /etc
ls -l /etc | wc
ls -l /etc | less
ls -l /etc | grep host

-----------------------------------------------------------------------------------------------------------------------------------------------

2.5 Understanding the Linux File System Hierarchy

Understanding the FHS:
* Directory usage on Linux is highly standardized
* Standard directories are defined in the FHS, which is maintained by Linux Foundation
* The starting point is the root directory
* Different devices may be integrated in the FHS by using mounts

		
			mount
		      ---------
		/ <----------  /dev/sda2
		| -- boot <--- /dev/sda1
		| -- home <--- SERVER:/home
		| -- var  <--- /dev/sdb
		| -- ....


pwd 
cd ..
ls
ls -l
cd /boot
ls
cd /dev
ls
ls -l 
cd /etc
ls
cat passwd
cat redhat-release
cat os-release
cd /
ls
cd /home
ls
useradd linda
ls -lk
cd /usr
ls
cd bin
ls
cd sbin
pwd
cd ../sbin
ls
cd /var
ls
cd log
ls
ls -l
less README
man hier

-----------------------------------------------------------------------------------------------------------------------------------------------

2.6 Using man

* man is the best source to get extensive usage information:
	* Sections define command types
	* Many man pages have examples
	* Search for text using /


man man
/section
man lvcreate
man ls
man lvcreate 

-----------------------------------------------------------------------------------------------------------------------------------------------

2.7 Finding the right man page

* All man pages are indexed in the man db
* Use man -k or apropos to search the mandb based on a keyword
* A lot of results can show, use grep to filter the results
* The mandb is bulit automatically through a cron scheduled task
* Manually trigger a rebulit using mandb


man -k user // "Nothing..."
su -
man man 
/-k
man apropos
man mandb
mandb
man -k user
man -k user | wc
man -k user | grep 8

-----------------------------------------------------------------------------------------------------------------------------------------------

2.8 Understanding vim

* vim is the default editor and is used as embedded editor by many commands
* vim is an enhanced version of vi
* To work with vim, you need to manage command mode and input mode


       --------		       	       
       |Start |	------------->  |-> Command Mode-|	
       |vim   |		        |	         |<- Enter Insert Mode
       --------		        |	         |
		      :wq! ->   |	         |
			        |                | 
		       Esc ->   |                | 
			        |                | 
			        |	         |<- Press a, i or Ins
      Back to Command mode ->   |	         | 	
			        |	         |
		                |	         |
			        |--Insert Mode <-|
		       	       

-----------------------------------------------------------------------------------------------------------------------------------------------

2.9 Using vim

vim Command Overview:

* Esc
* i,a
* o
* :wq!
* q!
* dd
* yy
* p
* v
* u 
* Ctrl-r
* gg
* G
* /text
* ?text
* ^
* :%/old/new/g

-----------------------------------------------------------------------------------------------------------------------------------------------

2.10 Using Globbing and Wildcards

Understanding Globbing:
* Globbing is a shell feature that helps matching filenames
* Not to be confused with regular expressions, which helps finding text patterns
* For documentation: see man 7 glob

Globbing Examples
* ls host*
* ls ?ost
* ls [hm]ost
* ls [!hm]ost
* ls script[0-9][0-9]


cd /etc
ls hosts
ls ?ost // "Cannot found..."
ls ?ost*
cd
touch hosts
touch ghosts
touch gosts
ls ?ost*
touch script{0..100}
ls
ls script[0-9][0-9]
ls script[0-5][5-9]

-----------------------------------------------------------------------------------------------------------------------------------------------

2.11 Using Cockpit

systemctl enable --now cockpit.socket
systemctl status cockpit.socket

http://localhost:9090
		
-----------------------------------------------------------------------------------------------------------------------------------------------

3.1 Essential File Management Tasks

* ls 
* mkdir
* cp
* mv
* rmdir
* rm


ls
ls -l
mkdir scripts
mkdir new/scripts // "Cannot create directory..."
mkdir -p new/scripts
cp /etc/hosts .
cp /etc/h* . // "Not specified..."
cp -r /etc/h* .
mv script* scripts/ // "Cannot move..."
rmdir scripts/
rm hosts.deny
su -
rm -rf / // "It is too dangerous..."

-----------------------------------------------------------------------------------------------------------------------------------------------

3.2 Finding Files

* ls is used to list files, not to find files
* which looks for binaries in $PATH
* locate uses a database, built by updatedb to find files in a database
* find is the most flexible tool that allows you to find files based on many criteria


which useradd
echo $PATH
vim hello
+" #!/bin/bash
   echo hello world"
chmod +x hello
hello
./hello
which hello
locate useradd
updatedb
locate useradd
touch newfile
locate newfile
find / -name "hosts"
find / -name "host"
find / -type f -size +100M
find / -user student
find /etc -exec grep -l student {} \; 
find /etc -exec grep -l student {} \; 2>/dev/null
grep -l student /etc/*
grep -l student /etc/* 2>/dev/null
find /etc -size +100c -exec grep -l student {} \; 
find /etc -size +100c -exec grep -l student {} \; -exec cp {} /tmp \; 2>/dev/null
ls /tmp

-----------------------------------------------------------------------------------------------------------------------------------------------

3.3 Understanding Mounts

* To access a device, it must be connected to a directory
* This is known as mounting the device
* The Linux filesystem typically uses multiple mounts
* Different types of data typically are on different devices for multiple reasons:
	* security
	* manageability
	* specific mount options

-----------------------------------------------------------------------------------------------------------------------------------------------

3.4 Understanding Links 

* Links are pointers to files in a different location
* Compare to shortcuts on other operating systems
* Links can be useful to make the same file avaliable on multiple locations
* Linux uses hard links and symbolic links
* Create hard links with ln and symbolic links with ln -s 



			blocks
	---------------------------------------
			^
			inode2 
	---------------------------------------
	^		^		^
	name3		x name		x name2 


	* cross device
	* directory

-----------------------------------------------------------------------------------------------------------------------------------------------

3.5 Working with Links

ls -il /etc/hosts
ln /etc/hosts /root/hardhosts
ls -il /etc/hosts /root/hardhosts
vim /etc/hosts
+"10.0.0.10	dummy.example.local"
ls -il /etc/hosts /root/hardhosts
ln -s /etc/hosts symhosts
ls -il /etc/hosts /root/hardhosts /etc/symhosts
rm -f /etc/hosts
ls -il /etc/hosts /root/hardhosts /etc/symhosts
ls
cat symhosts
ln /root/hardhosts /etc/hosts
ls -il /etc/hosts /root/hardhosts /root/symhosts

cd /
ls -l

-----------------------------------------------------------------------------------------------------------------------------------------------

3.6 Working with tar

* tar is the Tape Archiver and was created a long time ago
* By default, it doesn't compress data
* Basic use is to compress, extract or list:
	* tar -cvf my_archive.tar /home/etc
	* tar -tvf will show contents of an archive
	* tar -xvf my_archive extracts to the current directory 
		* Use -C to switch the output path
* To add compression, use -z, -j or -J

tar -cvf ~/mytar.tar /home /etc
cd 
ls -l
tar tvf mytar.tar | less
tar xvf mytar.tar
ls
ls -l
rm -rf etc home
tar xvf mytar.tar -C /tmp
ls /tmp
ls -l
mv mytar.tar mytar
file mytar

-----------------------------------------------------------------------------------------------------------------------------------------------

3.7 Working with Compressed Files

Understanding Compression Utilities:
A wide range of compression solutions is avaliable for Linux:
* gzip is still the most common compression utility
* bzip2 is an alternative utility
* zip is also avaliable and has Windows-compatible syntax
* xz is showing up more often as well


ls -lk
gzip mytar
ls -l
gunzip mytar.gz
ls -l
gzip -k mytar
ls -l
bzip2 -k mytar
ls -l
xz -k mytar
ls -l

-----------------------------------------------------------------------------------------------------------------------------------------------

4.1 Using Common Text Tools

More or Less?:
* more was the original file pager
* less was developed to offer some more advanced features
* As a reaction to that, more was developed a bit more
* But still, to do more, use less

Using head and tail:
* Use head to show the 10 first lines of a text file
* Use tail to show the 10 lat lines
* Use -n nn to specify another number of lines

Displaying File Contents with cat and tac:
* cat dumps text file contents on screen:
	* -A shows all non-printable characters
	* -b numbers lines
	* -s suppresses repeated empty lines
* tac is doing the same, but in reversed order
 
Other Common Text Processing Utilities:
* cut: filter output
* sort: sort output
* tr: translates


less /etc/passwd
more /etc/passwd
head -n 5 /etc/passwd
head -n 10 /etc/passwd | tail -n 1
tail -n 3 /etc/passwd
tail -f /var/log/messages
cat /etc/hosts
cat -A /etc/hosts
cat -b /etc/hosts
cat -s /etc/hosts
tac /etc/hosts
cut -f 3 -d : /etc/passwd | less
cut -f 3 -d : /etc/passwd | sort | less
cut -f 3 -d : /etc/passwd | sort -n | less
cut -f 1 -d : /etc/passwd | sort | tr [a-z] [A-Z]
cut -f 1 -d : /etc/passwd | sort | tr [:lower:] [:upper:]

-----------------------------------------------------------------------------------------------------------------------------------------------

4.2 Using grep

grep is excellent to find text in files or in output
* ps aux | grep ssh
* grep linda *
* grep -i linda *
* grep -AS linda /etc/passwd
* grep -R root /etc


ps aux
ps aux | grep ssh
cd /etc
grep linda *
grep linda * 2>/dev/null
grep -l linda * 2>/dev/null
grep -i linda * 2>/dev/null
grep -A2 linda * 2>/dev/null
grep -B2 linda * 2>/dev/null
grep -Rl root /etc 2>/dev/null | less

-----------------------------------------------------------------------------------------------------------------------------------------------

4.3 Understanding Regular Expressions

* Regular Expressions are text patterns that are used by tools like grep and others 
* Don't confuse regular expressions with globbing!
* They may look like file globbing, but really are different!
	* grep 'a*' a*
* Regular expressions are for use with specific tools only: grep, vim, awk, sed
* Extended regular expressions enhance basic regex features
* See man 7 regex for details
* Regular Expressions are bulit around atoms; an atom specifies what text is to be matched:
	* Atoms can be single characters, a range of characters or a dot
	* Atoms can also be a class, such as [[:alpha:]], [[:upper:]], [[:digit:]] or [[:alnum:]]
* Second is the repetition operator, specifying how often a character occurs
* The third element is indicating where to find the next character

Common Regular Expressions:
* ^ beginning of the line
* $ end of line
* \< beginning of word
* \> end of word
* * zero or more times
* + one or more times
* ? zero or one time
* {n} exactly n times


cat regtext
grep b.t regtext
grep 'b.t' regtext
grep 'b.*t' regtext
grep 'bo*t' regtext
grep 'b.?t' regtext
grep -e 'b.?t' regtext

-----------------------------------------------------------------------------------------------------------------------------------------------

4.4 using awk

Understanding awk:
* awk is a powerful text processing utility that is specialized in data extraction and reporting 
* It can perform actions based on selectors


awk -F : '/linda/ { print $4 }' /etc/passwd
awk -F : '{ print $NF }' /etc/passwd
ls -l /etc | awk '/pass/ { print }' | less
ls -l /etc/ | grep pass

-----------------------------------------------------------------------------------------------------------------------------------------------

4.5 Using sed

Understanding sed: 
* sed is the stream editor, used to search and transform text
* It can be used to search for text and perform an operation on matching text


vim sedfile
sed -n 4p sedfile
sed -i s/four/FOUR/g sedfile
sed -n 4p sedfile
sed -i -e '2d' sedfile
sed -n 4p sedfile
cat sedfile

-----------------------------------------------------------------------------------------------------------------------------------------------

5.1 Understanding the Root User

	
	Users			Processes

	       --------------
	       | user space | 
	       --------------
		rm-rf/

      --------------   -----------
      | permission |   | syscall | 
     ----------------------------------
       
       --------
       | Root | 
       --------

		kernel space
		drivers

	       ------------
	       | HARDWARE | 
	       ------------

----------------------------------------------------------------------------------------------------------------------------------------------

5.2 Logging in to the GUI

login
Enter
password
Enter :)

----------------------------------------------------------------------------------------------------------------------------------------------

5.3 Logging in to the Console

login
Enter
password
Enter :)

----------------------------------------------------------------------------------------------------------------------------------------------

5.4 Understanding Virtual Terminals

computer1	computer2	computer3

tty1		tty2		tty3
^		^		^
----------------------------------		
		| 				virtual terminal
		| 				------------------
	     /dev/tty
	    ---------

----------------------------------------------------------------------------------------------------------------------------------------------

5.5 Switching Between Virtual Terminals

Working with Virtual Terminals:
* tty1-tty6 are avaliable to login
* If installed and active, the GUI is on tty1
* Use chvt to switch between virtual terminals
* Or use [Ctrl]+Alt-Fn

su -
chvt 1
chvt 2
chvt 4
w

----------------------------------------------------------------------------------------------------------------------------------------------

5.6 Using su to Work as Another User

* su is used to open a shell as another user
	* Useful to open a root shell
	* For root, useful to test functionality as a user
* The password of the target user is required
* Use su - to open a login shell
	* This will give complete access to the environment of the target user


su -
exit
su - linda

----------------------------------------------------------------------------------------------------------------------------------------------

5.7 Using sudo to Perform Administrator Tasks

Understanding sudo:
* sudo is used to run tasks as another user
* sudo prompts for the password of the current user
* Users must be authorized to use sudo
* Authorization through /etc/sudoers and /etc/sudoers.d/*
	* Do NOT edit directly but use visudo
* Users that are member of the group wheel can use sudo to run administrations tasks 


visudo
under the line "## Allows members of the users group to mount and umount the 
		## cdrom as root"
+"linda	  	ALL=/usr/sbin/useradd, /usr/bin/passwd"

----------------------------------------------------------------------------------------------------------------------------------------------

5.8 Using ssh to Log in Remotely

* SSH is Secure Shell and used to establish a secured remote connection
* Identity of target server is verified through host keys
	* After initial connection, host key is stored in ~/.ssh/known_hosts
* Sensitive data will be sent through an encrypted connection
* Use ssh-X or ssh-Y to display graphical screens from the target server locally


ssh localhost
ls
ssh -Y linda@localhost

----------------------------------------------------------------------------------------------------------------------------------------------









































